<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: adventure | cykana.org]]></title>
  <link href="http://cykana.org/blog/categories/adventure/atom.xml" rel="self"/>
  <link href="http://cykana.org/"/>
  <updated>2012-12-27T13:38:46-06:00</updated>
  <id>http://cykana.org/</id>
  <author>
    <name><![CDATA[Chris Cykana]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Collapsing git history]]></title>
    <link href="http://cykana.org/blog/2012/12/27/collapsing-git-history/"/>
    <updated>2012-12-27T10:14:00-06:00</updated>
    <id>http://cykana.org/blog/2012/12/27/collapsing-git-history</id>
    <content type="html"><![CDATA[<p>When I was first setting up Octopress, I kind of did it wrong. I straight cloned it from Github into <code>~/projects/cykana.org</code> locally, which brings Octopress's own git history along with it. What I <em>should've</em> done was clone Octopress separately, then inintialize a new repo and cp/add/commit everything in the Octopress directory into it. Oops. Let's muck around and try to fix this.</p>

<p><strong>SPOILERS!</strong> Ended up fixing this by giving up and doing the right thing in the first place, but learned some weird git stuff along the way.</p>

<p>Note: I've got <code>git log</code> aliased to <code>log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short</code>, which looks really great, so that's what'll show up in log codeblocks that follow.</p>

<!-- more -->


<h2>Truncating</h2>

<p>It's pretty easy to collapse a git history down to a particular commit (actually, truncate is probably more accurate). Put the SHA of the commit you want to use as your new history starting point in <code>.git/info/grafts</code>. When you do a git log, you'll see <em>only</em> that commit in your history:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>* 30b7452 2012-12-27 | cykana.org initial commit (grafted, HEAD, master) [Chris Cykana]</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This is temporary: if you remove <code>.git/info/grafts</code>, you'll get the full history back:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>* 30b7452 2012-12-27 | cykana.org initial commit (HEAD, master) [Chris Cykana]
</span><span class='line'>* bfe99ef 2012-12-24 | Merge branch 'master' of github.com:cmykna/cykana.org (origin/master) [Chris Cykan
</span><span class='line'>*   48d3e75 2012-12-19 | Merge pull request #844 from jsvensson/rsyncargs (HEAD, origin/master, origin/HEAD, master) [Brandon Mathis]
</span><span class='line'>|\&lt;br/>
</span><span class='line'>| * 916b87a 2012-12-09 | Rakefile option for any additional rsync arguments [Johan Svensson]
</span><span class='line'>* |   c9f820f 2012-12-19 | Merge pull request #824 from liangsun/patch-1 [Brandon Mathis]</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>To make it permanent, run <code>git filter-branch</code> without any arguments. Notice how how <code>grafts</code> is no longer before HEAD in the log entry, and the new commit SHA:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>* e1ce881 2012-12-27 | cykana.org initial commit (HEAD, master) [Chris Cykana]</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><strong>IMPORTANT</strong>: this completely sends your previous history to the <em>moon</em> for all commits that are children of the current SHA. However, you can recover the old history by doing <code>git reset --hard SHA</code>, where SHA is a commit from before the graft/filter operation.</p>

<h2>Oh wait, what about remotes?</h2>

<p>This works great locally, but what if you're <em>really</em> dumb and have already pushed the version of your repo with all the history to a remote endpoint? Well, you get this:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h1>Your branch and 'origin/master' have diverged,&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;h1>and have 1 and 626 different commits each, respectively.&lt;/h1>
</span><span class='line'>
</span><span class='line'>&lt;p></span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Uh-oh. Now git thinks our branch is 600+ commits behind the branch it's tracking remotely, and pulling from remote will put all those commits back in your history. One solution to this is to just do the graft without the filter-branch: that'll let git pretend that you don't have that old Octopress history locally and keep it out of your logs, but it'll still be visible on Github, which isn't ideal. I just want to track <em>my</em> commits.</p>

<h2>Well this is...anticlimactic.</h2>

<p>Okay, I've piddled around enough with stupid git tricks and just want a clean history. <strong>FINE</strong>. Ended up doing what I should've done in the first place, which was start from an empty repo and not a cloned Octopress repo.</p>

<p>The many, <em>many</em> ways you can screw around with git history is pretty interesting, though.</p>

<p>According to people who are <del>probably</del> certainly smarter than me, grafts are more of a quick hack than something you should be making a regular part of your workflow, but in specific cases, git's graft mechanism can be really helpful. Here's what helped me figure all this out:</p>

<ul>
<li><a href="http://stackoverflow.com/a/475931">StackOverflow - Collapsing a git repository's history</a></li>
<li><a href="http://stackoverflow.com/a/6802005">StackOverflow - How do git grafts and replace differ?</a></li>
<li><a href="https://git.wiki.kernel.org/index.php/GraftPoint">wiki.kernel.org GraftPoint entry</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
